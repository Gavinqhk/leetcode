// 位运算

/**
 * 左移 <<
 * 16 8 4 2 1
 * 0 1 1 1 1 ---- 15
 * << 1
 * 1 1 1 1 0 ---- 30
 *
 * res = a << n
 * res = a * 2^n
 *
 * a左移n位实际是a乘以2的n次方
 */
const resl = 15 << 1;
console.log("<<", resl);

/**
 * 算数右移 >>
 * 16 8 4 2 1
 * 0 1 1 1 1 ---- 15
 * >> 1
 * 1 1 1 ---- 7
 *
 * res = a >> n
 * res = a / 2^n
 *
 * a左移n位实际是a乘以2的n次方
 */
const resr = 15 >> 1;
console.log(">>", resr);

// 按位操作

/**
 * 按位与 &
 * 对位都是1则为1
 * 8 & 7
 * 1 0 0 0 --- 8
 *       &
 * 0 1 1 1 --- 7
 * -------------
 * 0 0 0 0 --- 0
 */
const res1 = 8 & 7;
console.log("&", res1);

/**
 * 按位或 |
 * 对位有1则为1
 * 8 | 7
 * 1 0 0 0 --- 8
 *       |
 * 0 1 1 1 --- 7
 * -------------
 * 1 1 1 1 --- 15
 */
const res2 = 8 | 7;
console.log("|", res2);

/**
 * 按位异或 ^
 * 对位有1则为1
 * 8 ^ 7
 * 1 0 0 0 --- 8
 *       ^
 * 0 1 1 1 --- 7
 * -------------
 * 1 1 1 1 --- 15
 */
const res3 = 8 ^ 7;
console.log("^", res3);
